version: '3.8'

services:
  # Telegram AI Bot (Simplified Version)
  bot:
    image: python:3.11-slim
    container_name: telegram-ai-bot
    working_dir: /app
    command: >
        sh -c "
          pip install python-telegram-bot aiohttp &&
          python ai_bot.py
        "
    volumes:
      - .:/app
    environment:
      # Telegram Configuration
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      TELEGRAM_ADMIN_IDS: ${TELEGRAM_ADMIN_IDS}
      
      # Logging
      LOG_LEVEL: INFO
      
      # Application
      DEBUG: false
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: PostgreSQL Database (uncomment if needed)
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: telegram-ai-bot-postgres
  #   environment:
  #     POSTGRES_DB: telegram_ai_bot
  #     POSTGRES_USER: user
  #     POSTGRES_PASSWORD: password
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U user -d telegram_ai_bot"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

  # Optional: Redis Cache (uncomment if needed)
  # redis:
  #   image: redis:7-alpine
  #   container_name: telegram-ai-bot-redis
  #   command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
  #   volumes:
  #     - redis_data:/data
  #   ports:
  #     - "6379:6379"
  #   restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD", "redis-cli", "ping"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

# volumes:
#   postgres_data:
#     driver: local
#   redis_data:
#     driver: local